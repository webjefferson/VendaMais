#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.34014
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace vdmNegocio
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="VendasMais")]
	public partial class dcDadosDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definições do Método de Extensibilidade
    partial void OnCreated();
    partial void InsertCategoria(Categoria instance);
    partial void UpdateCategoria(Categoria instance);
    partial void DeleteCategoria(Categoria instance);
    partial void InsertPessoa(Pessoa instance);
    partial void UpdatePessoa(Pessoa instance);
    partial void DeletePessoa(Pessoa instance);
    partial void InsertPessoaFisica(PessoaFisica instance);
    partial void UpdatePessoaFisica(PessoaFisica instance);
    partial void DeletePessoaFisica(PessoaFisica instance);
    partial void InsertPessoaJuridica(PessoaJuridica instance);
    partial void UpdatePessoaJuridica(PessoaJuridica instance);
    partial void DeletePessoaJuridica(PessoaJuridica instance);
    partial void InsertProdutoImagem(ProdutoImagem instance);
    partial void UpdateProdutoImagem(ProdutoImagem instance);
    partial void DeleteProdutoImagem(ProdutoImagem instance);
    partial void InsertSubCategoria(SubCategoria instance);
    partial void UpdateSubCategoria(SubCategoria instance);
    partial void DeleteSubCategoria(SubCategoria instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertNotificacao(Notificacao instance);
    partial void UpdateNotificacao(Notificacao instance);
    partial void DeleteNotificacao(Notificacao instance);
    partial void InsertTipo(Tipo instance);
    partial void UpdateTipo(Tipo instance);
    partial void DeleteTipo(Tipo instance);
    partial void InsertProduto(Produto instance);
    partial void UpdateProduto(Produto instance);
    partial void DeleteProduto(Produto instance);
    partial void InsertProdutoTipoUnidade(ProdutoTipoUnidade instance);
    partial void UpdateProdutoTipoUnidade(ProdutoTipoUnidade instance);
    partial void DeleteProdutoTipoUnidade(ProdutoTipoUnidade instance);
    partial void InsertPaí(Paí instance);
    partial void UpdatePaí(Paí instance);
    partial void DeletePaí(Paí instance);
    partial void InsertConfiguracoes(Configuracoes instance);
    partial void UpdateConfiguracoes(Configuracoes instance);
    partial void DeleteConfiguracoes(Configuracoes instance);
    partial void InsertRegime(Regime instance);
    partial void UpdateRegime(Regime instance);
    partial void DeleteRegime(Regime instance);
    partial void InsertProdutoTipoUnidade1(ProdutoTipoUnidade1 instance);
    partial void UpdateProdutoTipoUnidade1(ProdutoTipoUnidade1 instance);
    partial void DeleteProdutoTipoUnidade1(ProdutoTipoUnidade1 instance);
    partial void InsertImposto(Imposto instance);
    partial void UpdateImposto(Imposto instance);
    partial void DeleteImposto(Imposto instance);
    partial void InsertICMS(ICMS instance);
    partial void UpdateICMS(ICMS instance);
    partial void DeleteICMS(ICMS instance);
    partial void InsertSituacaoTributaria(SituacaoTributaria instance);
    partial void UpdateSituacaoTributaria(SituacaoTributaria instance);
    partial void DeleteSituacaoTributaria(SituacaoTributaria instance);
    #endregion
		
		public dcDadosDataContext() : 
				base(global::vdmNegocio.Properties.Settings.Default.csVendaMais, mappingSource)
		{
			OnCreated();
		}
		
		public dcDadosDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dcDadosDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dcDadosDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dcDadosDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Categoria> Categoria
		{
			get
			{
				return this.GetTable<Categoria>();
			}
		}
		
		public System.Data.Linq.Table<Pessoa> Pessoa
		{
			get
			{
				return this.GetTable<Pessoa>();
			}
		}
		
		public System.Data.Linq.Table<PessoaFisica> PessoaFisica
		{
			get
			{
				return this.GetTable<PessoaFisica>();
			}
		}
		
		public System.Data.Linq.Table<PessoaJuridica> PessoaJuridica
		{
			get
			{
				return this.GetTable<PessoaJuridica>();
			}
		}
		
		public System.Data.Linq.Table<ProdutoImagem> ProdutoImagem
		{
			get
			{
				return this.GetTable<ProdutoImagem>();
			}
		}
		
		public System.Data.Linq.Table<SubCategoria> SubCategoria
		{
			get
			{
				return this.GetTable<SubCategoria>();
			}
		}
		
		public System.Data.Linq.Table<SubCategoriaDasCategorias> SubCategoriaDasCategorias
		{
			get
			{
				return this.GetTable<SubCategoriaDasCategorias>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Notificacao> Notificacao
		{
			get
			{
				return this.GetTable<Notificacao>();
			}
		}
		
		public System.Data.Linq.Table<Tipo> Tipo
		{
			get
			{
				return this.GetTable<Tipo>();
			}
		}
		
		public System.Data.Linq.Table<Produto> Produto
		{
			get
			{
				return this.GetTable<Produto>();
			}
		}
		
		public System.Data.Linq.Table<ProdutoTipoUnidade> ProdutoTipoUnidade
		{
			get
			{
				return this.GetTable<ProdutoTipoUnidade>();
			}
		}
		
		public System.Data.Linq.Table<Paí> País
		{
			get
			{
				return this.GetTable<Paí>();
			}
		}
		
		public System.Data.Linq.Table<Configuracoes> Configuracoes
		{
			get
			{
				return this.GetTable<Configuracoes>();
			}
		}
		
		public System.Data.Linq.Table<Regime> Regime
		{
			get
			{
				return this.GetTable<Regime>();
			}
		}
		
		public System.Data.Linq.Table<ProdutoTipoUnidade1> ProdutoTipoUnidade1
		{
			get
			{
				return this.GetTable<ProdutoTipoUnidade1>();
			}
		}
		
		public System.Data.Linq.Table<Imposto> Imposto
		{
			get
			{
				return this.GetTable<Imposto>();
			}
		}
		
		public System.Data.Linq.Table<ICMS> ICMS
		{
			get
			{
				return this.GetTable<ICMS>();
			}
		}
		
		public System.Data.Linq.Table<SituacaoTributaria> SituacaoTributaria
		{
			get
			{
				return this.GetTable<SituacaoTributaria>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categoria")]
	public partial class Categoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nome;
		
		private EntitySet<Produto> _Produto;
		
		private EntitySet<Imposto> _Imposto;
		
    #region Definições do Método de Extensibilidade
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    #endregion
		
		public Categoria()
		{
			this._Produto = new EntitySet<Produto>(new Action<Produto>(this.attach_Produto), new Action<Produto>(this.detach_Produto));
			this._Imposto = new EntitySet<Imposto>(new Action<Imposto>(this.attach_Imposto), new Action<Imposto>(this.detach_Imposto));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Produto", Storage="_Produto", ThisKey="id", OtherKey="id_categoria")]
		public EntitySet<Produto> Produto
		{
			get
			{
				return this._Produto;
			}
			set
			{
				this._Produto.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Imposto", Storage="_Imposto", ThisKey="id", OtherKey="id_categoria")]
		public EntitySet<Imposto> Imposto
		{
			get
			{
				return this._Imposto;
			}
			set
			{
				this._Imposto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Produto(Produto entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = this;
		}
		
		private void detach_Produto(Produto entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = null;
		}
		
		private void attach_Imposto(Imposto entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = this;
		}
		
		private void detach_Imposto(Imposto entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pessoa")]
	public partial class Pessoa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPessoa;
		
		private EntityRef<PessoaFisica> _PessoaFisica;
		
		private EntityRef<PessoaJuridica> _PessoaJuridica;
		
		private EntitySet<Usuario> _Usuario;
		
    #region Definições do Método de Extensibilidade
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPessoaChanging(int value);
    partial void OnidPessoaChanged();
    #endregion
		
		public Pessoa()
		{
			this._PessoaFisica = default(EntityRef<PessoaFisica>);
			this._PessoaJuridica = default(EntityRef<PessoaJuridica>);
			this._Usuario = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario), new Action<Usuario>(this.detach_Usuario));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPessoa", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPessoa
		{
			get
			{
				return this._idPessoa;
			}
			set
			{
				if ((this._idPessoa != value))
				{
					this.OnidPessoaChanging(value);
					this.SendPropertyChanging();
					this._idPessoa = value;
					this.SendPropertyChanged("idPessoa");
					this.OnidPessoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pessoa_PessoaFisica", Storage="_PessoaFisica", ThisKey="idPessoa", OtherKey="idPessoa", IsUnique=true, IsForeignKey=false)]
		public PessoaFisica PessoaFisica
		{
			get
			{
				return this._PessoaFisica.Entity;
			}
			set
			{
				PessoaFisica previousValue = this._PessoaFisica.Entity;
				if (((previousValue != value) 
							|| (this._PessoaFisica.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PessoaFisica.Entity = null;
						previousValue.Pessoa = null;
					}
					this._PessoaFisica.Entity = value;
					if ((value != null))
					{
						value.Pessoa = this;
					}
					this.SendPropertyChanged("PessoaFisica");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pessoa_PessoaJuridica", Storage="_PessoaJuridica", ThisKey="idPessoa", OtherKey="idPessoa", IsUnique=true, IsForeignKey=false)]
		public PessoaJuridica PessoaJuridica
		{
			get
			{
				return this._PessoaJuridica.Entity;
			}
			set
			{
				PessoaJuridica previousValue = this._PessoaJuridica.Entity;
				if (((previousValue != value) 
							|| (this._PessoaJuridica.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PessoaJuridica.Entity = null;
						previousValue.Pessoa = null;
					}
					this._PessoaJuridica.Entity = value;
					if ((value != null))
					{
						value.Pessoa = this;
					}
					this.SendPropertyChanged("PessoaJuridica");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pessoa_Usuario", Storage="_Usuario", ThisKey="idPessoa", OtherKey="IdPessoa")]
		public EntitySet<Usuario> Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				this._Usuario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Pessoa = this;
		}
		
		private void detach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Pessoa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PessoaFisica")]
	public partial class PessoaFisica : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPessoa;
		
		private string _NomeCompleto;
		
		private long _CPF;
		
		private System.Nullable<long> _RG;
		
		private EntityRef<Pessoa> _Pessoa;
		
    #region Definições do Método de Extensibilidade
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPessoaChanging(int value);
    partial void OnidPessoaChanged();
    partial void OnNomeCompletoChanging(string value);
    partial void OnNomeCompletoChanged();
    partial void OnCPFChanging(long value);
    partial void OnCPFChanged();
    partial void OnRGChanging(System.Nullable<long> value);
    partial void OnRGChanged();
    #endregion
		
		public PessoaFisica()
		{
			this._Pessoa = default(EntityRef<Pessoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPessoa", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPessoa
		{
			get
			{
				return this._idPessoa;
			}
			set
			{
				if ((this._idPessoa != value))
				{
					if (this._Pessoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPessoaChanging(value);
					this.SendPropertyChanging();
					this._idPessoa = value;
					this.SendPropertyChanged("idPessoa");
					this.OnidPessoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeCompleto", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string NomeCompleto
		{
			get
			{
				return this._NomeCompleto;
			}
			set
			{
				if ((this._NomeCompleto != value))
				{
					this.OnNomeCompletoChanging(value);
					this.SendPropertyChanging();
					this._NomeCompleto = value;
					this.SendPropertyChanged("NomeCompleto");
					this.OnNomeCompletoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPF", DbType="BigInt NOT NULL")]
		public long CPF
		{
			get
			{
				return this._CPF;
			}
			set
			{
				if ((this._CPF != value))
				{
					this.OnCPFChanging(value);
					this.SendPropertyChanging();
					this._CPF = value;
					this.SendPropertyChanged("CPF");
					this.OnCPFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RG", DbType="BigInt")]
		public System.Nullable<long> RG
		{
			get
			{
				return this._RG;
			}
			set
			{
				if ((this._RG != value))
				{
					this.OnRGChanging(value);
					this.SendPropertyChanging();
					this._RG = value;
					this.SendPropertyChanged("RG");
					this.OnRGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pessoa_PessoaFisica", Storage="_Pessoa", ThisKey="idPessoa", OtherKey="idPessoa", IsForeignKey=true)]
		public Pessoa Pessoa
		{
			get
			{
				return this._Pessoa.Entity;
			}
			set
			{
				Pessoa previousValue = this._Pessoa.Entity;
				if (((previousValue != value) 
							|| (this._Pessoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pessoa.Entity = null;
						previousValue.PessoaFisica = null;
					}
					this._Pessoa.Entity = value;
					if ((value != null))
					{
						value.PessoaFisica = this;
						this._idPessoa = value.idPessoa;
					}
					else
					{
						this._idPessoa = default(int);
					}
					this.SendPropertyChanged("Pessoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PessoaJuridica")]
	public partial class PessoaJuridica : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPessoa;
		
		private string _RazaoSocial;
		
		private long _CNPJ;
		
		private EntityRef<Pessoa> _Pessoa;
		
    #region Definições do Método de Extensibilidade
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPessoaChanging(int value);
    partial void OnidPessoaChanged();
    partial void OnRazaoSocialChanging(string value);
    partial void OnRazaoSocialChanged();
    partial void OnCNPJChanging(long value);
    partial void OnCNPJChanged();
    #endregion
		
		public PessoaJuridica()
		{
			this._Pessoa = default(EntityRef<Pessoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPessoa", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idPessoa
		{
			get
			{
				return this._idPessoa;
			}
			set
			{
				if ((this._idPessoa != value))
				{
					if (this._Pessoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPessoaChanging(value);
					this.SendPropertyChanging();
					this._idPessoa = value;
					this.SendPropertyChanged("idPessoa");
					this.OnidPessoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RazaoSocial", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string RazaoSocial
		{
			get
			{
				return this._RazaoSocial;
			}
			set
			{
				if ((this._RazaoSocial != value))
				{
					this.OnRazaoSocialChanging(value);
					this.SendPropertyChanging();
					this._RazaoSocial = value;
					this.SendPropertyChanged("RazaoSocial");
					this.OnRazaoSocialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNPJ", DbType="BigInt NOT NULL")]
		public long CNPJ
		{
			get
			{
				return this._CNPJ;
			}
			set
			{
				if ((this._CNPJ != value))
				{
					this.OnCNPJChanging(value);
					this.SendPropertyChanging();
					this._CNPJ = value;
					this.SendPropertyChanged("CNPJ");
					this.OnCNPJChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pessoa_PessoaJuridica", Storage="_Pessoa", ThisKey="idPessoa", OtherKey="idPessoa", IsForeignKey=true)]
		public Pessoa Pessoa
		{
			get
			{
				return this._Pessoa.Entity;
			}
			set
			{
				Pessoa previousValue = this._Pessoa.Entity;
				if (((previousValue != value) 
							|| (this._Pessoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pessoa.Entity = null;
						previousValue.PessoaJuridica = null;
					}
					this._Pessoa.Entity = value;
					if ((value != null))
					{
						value.PessoaJuridica = this;
						this._idPessoa = value.idPessoa;
					}
					else
					{
						this._idPessoa = default(int);
					}
					this.SendPropertyChanged("Pessoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProdutoImagem")]
	public partial class ProdutoImagem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_imagem;
		
		private System.Nullable<int> _id_produto;
		
		private string _caminho;
		
		private EntityRef<Produto> _Produto;
		
    #region Definições do Método de Extensibilidade
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_imagemChanging(int value);
    partial void Onid_imagemChanged();
    partial void Onid_produtoChanging(System.Nullable<int> value);
    partial void Onid_produtoChanged();
    partial void OncaminhoChanging(string value);
    partial void OncaminhoChanged();
    #endregion
		
		public ProdutoImagem()
		{
			this._Produto = default(EntityRef<Produto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_imagem", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_imagem
		{
			get
			{
				return this._id_imagem;
			}
			set
			{
				if ((this._id_imagem != value))
				{
					this.Onid_imagemChanging(value);
					this.SendPropertyChanging();
					this._id_imagem = value;
					this.SendPropertyChanged("id_imagem");
					this.Onid_imagemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_produto", DbType="Int")]
		public System.Nullable<int> id_produto
		{
			get
			{
				return this._id_produto;
			}
			set
			{
				if ((this._id_produto != value))
				{
					if (this._Produto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_produtoChanging(value);
					this.SendPropertyChanging();
					this._id_produto = value;
					this.SendPropertyChanged("id_produto");
					this.Onid_produtoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caminho", DbType="VarChar(100)")]
		public string caminho
		{
			get
			{
				return this._caminho;
			}
			set
			{
				if ((this._caminho != value))
				{
					this.OncaminhoChanging(value);
					this.SendPropertyChanging();
					this._caminho = value;
					this.SendPropertyChanged("caminho");
					this.OncaminhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produto_ProdutoImagem", Storage="_Produto", ThisKey="id_produto", OtherKey="id_produto", IsForeignKey=true)]
		public Produto Produto
		{
			get
			{
				return this._Produto.Entity;
			}
			set
			{
				Produto previousValue = this._Produto.Entity;
				if (((previousValue != value) 
							|| (this._Produto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Produto.Entity = null;
						previousValue.ProdutoImagem.Remove(this);
					}
					this._Produto.Entity = value;
					if ((value != null))
					{
						value.ProdutoImagem.Add(this);
						this._id_produto = value.id_produto;
					}
					else
					{
						this._id_produto = default(Nullable<int>);
					}
					this.SendPropertyChanged("Produto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubCategoria")]
	public partial class SubCategoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nome;
		
		private EntitySet<Produto> _Produto;
		
    #region Definições do Método de Extensibilidade
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    #endregion
		
		public SubCategoria()
		{
			this._Produto = new EntitySet<Produto>(new Action<Produto>(this.attach_Produto), new Action<Produto>(this.detach_Produto));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(200)")]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubCategoria_Produto", Storage="_Produto", ThisKey="id", OtherKey="id_sub_categoria")]
		public EntitySet<Produto> Produto
		{
			get
			{
				return this._Produto;
			}
			set
			{
				this._Produto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Produto(Produto entity)
		{
			this.SendPropertyChanging();
			entity.SubCategoria = this;
		}
		
		private void detach_Produto(Produto entity)
		{
			this.SendPropertyChanging();
			entity.SubCategoria = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubCategoriaDasCategorias")]
	public partial class SubCategoriaDasCategorias
	{
		
		private int _id_categoria;
		
		private int _id_subcategoria;
		
		public SubCategoriaDasCategorias()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_categoria", DbType="Int NOT NULL")]
		public int id_categoria
		{
			get
			{
				return this._id_categoria;
			}
			set
			{
				if ((this._id_categoria != value))
				{
					this._id_categoria = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_subcategoria", DbType="Int NOT NULL")]
		public int id_subcategoria
		{
			get
			{
				return this._id_subcategoria;
			}
			set
			{
				if ((this._id_subcategoria != value))
				{
					this._id_subcategoria = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idUsuario;
		
		private int _IdPessoa;
		
		private string _Login;
		
		private string _Senha;
		
		private EntityRef<Pessoa> _Pessoa;
		
    #region Definições do Método de Extensibilidade
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUsuarioChanging(int value);
    partial void OnidUsuarioChanged();
    partial void OnIdPessoaChanging(int value);
    partial void OnIdPessoaChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnSenhaChanging(string value);
    partial void OnSenhaChanged();
    #endregion
		
		public Usuario()
		{
			this._Pessoa = default(EntityRef<Pessoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUsuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					this.OnidUsuarioChanging(value);
					this.SendPropertyChanging();
					this._idUsuario = value;
					this.SendPropertyChanged("idUsuario");
					this.OnidUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPessoa", DbType="Int NOT NULL")]
		public int IdPessoa
		{
			get
			{
				return this._IdPessoa;
			}
			set
			{
				if ((this._IdPessoa != value))
				{
					if (this._Pessoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPessoaChanging(value);
					this.SendPropertyChanging();
					this._IdPessoa = value;
					this.SendPropertyChanged("IdPessoa");
					this.OnIdPessoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Senha", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Senha
		{
			get
			{
				return this._Senha;
			}
			set
			{
				if ((this._Senha != value))
				{
					this.OnSenhaChanging(value);
					this.SendPropertyChanging();
					this._Senha = value;
					this.SendPropertyChanged("Senha");
					this.OnSenhaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pessoa_Usuario", Storage="_Pessoa", ThisKey="IdPessoa", OtherKey="idPessoa", IsForeignKey=true)]
		public Pessoa Pessoa
		{
			get
			{
				return this._Pessoa.Entity;
			}
			set
			{
				Pessoa previousValue = this._Pessoa.Entity;
				if (((previousValue != value) 
							|| (this._Pessoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pessoa.Entity = null;
						previousValue.Usuario.Remove(this);
					}
					this._Pessoa.Entity = value;
					if ((value != null))
					{
						value.Usuario.Add(this);
						this._IdPessoa = value.idPessoa;
					}
					else
					{
						this._IdPessoa = default(int);
					}
					this.SendPropertyChanged("Pessoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Notificacao")]
	public partial class Notificacao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idNotificacao;
		
		private int _Tipo;
		
		private string _Titulo;
		
		private System.DateTime _Data;
		
		private EntityRef<Tipo> _Tipo1;
		
    #region Definições do Método de Extensibilidade
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidNotificacaoChanging(int value);
    partial void OnidNotificacaoChanged();
    partial void OnTipoChanging(int value);
    partial void OnTipoChanged();
    partial void OnTituloChanging(string value);
    partial void OnTituloChanged();
    partial void OnDataChanging(System.DateTime value);
    partial void OnDataChanged();
    #endregion
		
		public Notificacao()
		{
			this._Tipo1 = default(EntityRef<Tipo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNotificacao", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idNotificacao
		{
			get
			{
				return this._idNotificacao;
			}
			set
			{
				if ((this._idNotificacao != value))
				{
					this.OnidNotificacaoChanging(value);
					this.SendPropertyChanging();
					this._idNotificacao = value;
					this.SendPropertyChanged("idNotificacao");
					this.OnidNotificacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="Int NOT NULL")]
		public int Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					if (this._Tipo1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titulo", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Titulo
		{
			get
			{
				return this._Titulo;
			}
			set
			{
				if ((this._Titulo != value))
				{
					this.OnTituloChanging(value);
					this.SendPropertyChanging();
					this._Titulo = value;
					this.SendPropertyChanged("Titulo");
					this.OnTituloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="DateTime NOT NULL")]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Notificacao", Storage="_Tipo1", ThisKey="Tipo", OtherKey="idTipo", IsForeignKey=true)]
		public Tipo Tipo1
		{
			get
			{
				return this._Tipo1.Entity;
			}
			set
			{
				Tipo previousValue = this._Tipo1.Entity;
				if (((previousValue != value) 
							|| (this._Tipo1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tipo1.Entity = null;
						previousValue.Notificacao.Remove(this);
					}
					this._Tipo1.Entity = value;
					if ((value != null))
					{
						value.Notificacao.Add(this);
						this._Tipo = value.idTipo;
					}
					else
					{
						this._Tipo = default(int);
					}
					this.SendPropertyChanged("Tipo1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tipo")]
	public partial class Tipo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTipo;
		
		private string _Imagem;
		
		private string _Descricao;
		
		private EntitySet<Notificacao> _Notificacao;
		
    #region Definições do Método de Extensibilidade
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoChanging(int value);
    partial void OnidTipoChanged();
    partial void OnImagemChanging(string value);
    partial void OnImagemChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    #endregion
		
		public Tipo()
		{
			this._Notificacao = new EntitySet<Notificacao>(new Action<Notificacao>(this.attach_Notificacao), new Action<Notificacao>(this.detach_Notificacao));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTipo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTipo
		{
			get
			{
				return this._idTipo;
			}
			set
			{
				if ((this._idTipo != value))
				{
					this.OnidTipoChanging(value);
					this.SendPropertyChanging();
					this._idTipo = value;
					this.SendPropertyChanged("idTipo");
					this.OnidTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imagem", DbType="VarChar(50)")]
		public string Imagem
		{
			get
			{
				return this._Imagem;
			}
			set
			{
				if ((this._Imagem != value))
				{
					this.OnImagemChanging(value);
					this.SendPropertyChanging();
					this._Imagem = value;
					this.SendPropertyChanged("Imagem");
					this.OnImagemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descricao", DbType="VarChar(50)")]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Notificacao", Storage="_Notificacao", ThisKey="idTipo", OtherKey="Tipo")]
		public EntitySet<Notificacao> Notificacao
		{
			get
			{
				return this._Notificacao;
			}
			set
			{
				this._Notificacao.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Notificacao(Notificacao entity)
		{
			this.SendPropertyChanging();
			entity.Tipo1 = this;
		}
		
		private void detach_Notificacao(Notificacao entity)
		{
			this.SendPropertyChanging();
			entity.Tipo1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Produto")]
	public partial class Produto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_produto;
		
		private System.Nullable<long> _codigo_referencia;
		
		private string _nome;
		
		private string _descricao;
		
		private int _id_sub_categoria;
		
		private System.DateTime _data_inclusao;
		
		private int _id_categoria;
		
		private decimal _preco;
		
		private System.Nullable<int> _tipo_unidade;
		
		private EntitySet<ProdutoImagem> _ProdutoImagem;
		
		private EntityRef<Categoria> _Categoria;
		
		private EntityRef<SubCategoria> _SubCategoria;
		
		private EntityRef<ProdutoTipoUnidade> _ProdutoTipoUnidade;
		
		private EntityRef<ProdutoTipoUnidade1> _ProdutoTipoUnidade1;
		
    #region Definições do Método de Extensibilidade
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_produtoChanging(int value);
    partial void Onid_produtoChanged();
    partial void Oncodigo_referenciaChanging(System.Nullable<long> value);
    partial void Oncodigo_referenciaChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OndescricaoChanging(string value);
    partial void OndescricaoChanged();
    partial void Onid_sub_categoriaChanging(int value);
    partial void Onid_sub_categoriaChanged();
    partial void Ondata_inclusaoChanging(System.DateTime value);
    partial void Ondata_inclusaoChanged();
    partial void Onid_categoriaChanging(int value);
    partial void Onid_categoriaChanged();
    partial void OnprecoChanging(decimal value);
    partial void OnprecoChanged();
    partial void Ontipo_unidadeChanging(System.Nullable<int> value);
    partial void Ontipo_unidadeChanged();
    #endregion
		
		public Produto()
		{
			this._ProdutoImagem = new EntitySet<ProdutoImagem>(new Action<ProdutoImagem>(this.attach_ProdutoImagem), new Action<ProdutoImagem>(this.detach_ProdutoImagem));
			this._Categoria = default(EntityRef<Categoria>);
			this._SubCategoria = default(EntityRef<SubCategoria>);
			this._ProdutoTipoUnidade = default(EntityRef<ProdutoTipoUnidade>);
			this._ProdutoTipoUnidade1 = default(EntityRef<ProdutoTipoUnidade1>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_produto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_produto
		{
			get
			{
				return this._id_produto;
			}
			set
			{
				if ((this._id_produto != value))
				{
					this.Onid_produtoChanging(value);
					this.SendPropertyChanging();
					this._id_produto = value;
					this.SendPropertyChanged("id_produto");
					this.Onid_produtoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigo_referencia", DbType="BigInt")]
		public System.Nullable<long> codigo_referencia
		{
			get
			{
				return this._codigo_referencia;
			}
			set
			{
				if ((this._codigo_referencia != value))
				{
					this.Oncodigo_referenciaChanging(value);
					this.SendPropertyChanging();
					this._codigo_referencia = value;
					this.SendPropertyChanged("codigo_referencia");
					this.Oncodigo_referenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descricao", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string descricao
		{
			get
			{
				return this._descricao;
			}
			set
			{
				if ((this._descricao != value))
				{
					this.OndescricaoChanging(value);
					this.SendPropertyChanging();
					this._descricao = value;
					this.SendPropertyChanged("descricao");
					this.OndescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_sub_categoria", DbType="Int NOT NULL")]
		public int id_sub_categoria
		{
			get
			{
				return this._id_sub_categoria;
			}
			set
			{
				if ((this._id_sub_categoria != value))
				{
					if (this._SubCategoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_sub_categoriaChanging(value);
					this.SendPropertyChanging();
					this._id_sub_categoria = value;
					this.SendPropertyChanged("id_sub_categoria");
					this.Onid_sub_categoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_inclusao", DbType="DateTime NOT NULL")]
		public System.DateTime data_inclusao
		{
			get
			{
				return this._data_inclusao;
			}
			set
			{
				if ((this._data_inclusao != value))
				{
					this.Ondata_inclusaoChanging(value);
					this.SendPropertyChanging();
					this._data_inclusao = value;
					this.SendPropertyChanged("data_inclusao");
					this.Ondata_inclusaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_categoria", DbType="Int NOT NULL")]
		public int id_categoria
		{
			get
			{
				return this._id_categoria;
			}
			set
			{
				if ((this._id_categoria != value))
				{
					if (this._Categoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_categoriaChanging(value);
					this.SendPropertyChanging();
					this._id_categoria = value;
					this.SendPropertyChanged("id_categoria");
					this.Onid_categoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_preco", DbType="Money NOT NULL")]
		public decimal preco
		{
			get
			{
				return this._preco;
			}
			set
			{
				if ((this._preco != value))
				{
					this.OnprecoChanging(value);
					this.SendPropertyChanging();
					this._preco = value;
					this.SendPropertyChanged("preco");
					this.OnprecoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipo_unidade", DbType="Int")]
		public System.Nullable<int> tipo_unidade
		{
			get
			{
				return this._tipo_unidade;
			}
			set
			{
				if ((this._tipo_unidade != value))
				{
					if ((this._ProdutoTipoUnidade.HasLoadedOrAssignedValue || this._ProdutoTipoUnidade1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontipo_unidadeChanging(value);
					this.SendPropertyChanging();
					this._tipo_unidade = value;
					this.SendPropertyChanged("tipo_unidade");
					this.Ontipo_unidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produto_ProdutoImagem", Storage="_ProdutoImagem", ThisKey="id_produto", OtherKey="id_produto")]
		public EntitySet<ProdutoImagem> ProdutoImagem
		{
			get
			{
				return this._ProdutoImagem;
			}
			set
			{
				this._ProdutoImagem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Produto", Storage="_Categoria", ThisKey="id_categoria", OtherKey="id", IsForeignKey=true)]
		public Categoria Categoria
		{
			get
			{
				return this._Categoria.Entity;
			}
			set
			{
				Categoria previousValue = this._Categoria.Entity;
				if (((previousValue != value) 
							|| (this._Categoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categoria.Entity = null;
						previousValue.Produto.Remove(this);
					}
					this._Categoria.Entity = value;
					if ((value != null))
					{
						value.Produto.Add(this);
						this._id_categoria = value.id;
					}
					else
					{
						this._id_categoria = default(int);
					}
					this.SendPropertyChanged("Categoria");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubCategoria_Produto", Storage="_SubCategoria", ThisKey="id_sub_categoria", OtherKey="id", IsForeignKey=true)]
		public SubCategoria SubCategoria
		{
			get
			{
				return this._SubCategoria.Entity;
			}
			set
			{
				SubCategoria previousValue = this._SubCategoria.Entity;
				if (((previousValue != value) 
							|| (this._SubCategoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubCategoria.Entity = null;
						previousValue.Produto.Remove(this);
					}
					this._SubCategoria.Entity = value;
					if ((value != null))
					{
						value.Produto.Add(this);
						this._id_sub_categoria = value.id;
					}
					else
					{
						this._id_sub_categoria = default(int);
					}
					this.SendPropertyChanged("SubCategoria");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProdutoTipoUnidade_Produto", Storage="_ProdutoTipoUnidade", ThisKey="tipo_unidade", OtherKey="id", IsForeignKey=true)]
		public ProdutoTipoUnidade ProdutoTipoUnidade
		{
			get
			{
				return this._ProdutoTipoUnidade.Entity;
			}
			set
			{
				ProdutoTipoUnidade previousValue = this._ProdutoTipoUnidade.Entity;
				if (((previousValue != value) 
							|| (this._ProdutoTipoUnidade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProdutoTipoUnidade.Entity = null;
						previousValue.Produto.Remove(this);
					}
					this._ProdutoTipoUnidade.Entity = value;
					if ((value != null))
					{
						value.Produto.Add(this);
						this._tipo_unidade = value.id;
					}
					else
					{
						this._tipo_unidade = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProdutoTipoUnidade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProdutoTipoUnidade1_Produto", Storage="_ProdutoTipoUnidade1", ThisKey="tipo_unidade", OtherKey="id", IsForeignKey=true)]
		public ProdutoTipoUnidade1 ProdutoTipoUnidade1
		{
			get
			{
				return this._ProdutoTipoUnidade1.Entity;
			}
			set
			{
				ProdutoTipoUnidade1 previousValue = this._ProdutoTipoUnidade1.Entity;
				if (((previousValue != value) 
							|| (this._ProdutoTipoUnidade1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProdutoTipoUnidade1.Entity = null;
						previousValue.Produto.Remove(this);
					}
					this._ProdutoTipoUnidade1.Entity = value;
					if ((value != null))
					{
						value.Produto.Add(this);
						this._tipo_unidade = value.id;
					}
					else
					{
						this._tipo_unidade = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProdutoTipoUnidade1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProdutoImagem(ProdutoImagem entity)
		{
			this.SendPropertyChanging();
			entity.Produto = this;
		}
		
		private void detach_ProdutoImagem(ProdutoImagem entity)
		{
			this.SendPropertyChanging();
			entity.Produto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProdutoTipoUnidade")]
	public partial class ProdutoTipoUnidade : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Descricao;
		
		private EntitySet<Produto> _Produto;
		
    #region Definições do Método de Extensibilidade
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    #endregion
		
		public ProdutoTipoUnidade()
		{
			this._Produto = new EntitySet<Produto>(new Action<Produto>(this.attach_Produto), new Action<Produto>(this.detach_Produto));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descricao", DbType="NChar(2) NOT NULL", CanBeNull=false)]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProdutoTipoUnidade_Produto", Storage="_Produto", ThisKey="id", OtherKey="tipo_unidade")]
		public EntitySet<Produto> Produto
		{
			get
			{
				return this._Produto;
			}
			set
			{
				this._Produto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Produto(Produto entity)
		{
			this.SendPropertyChanging();
			entity.ProdutoTipoUnidade = this;
		}
		
		private void detach_Produto(Produto entity)
		{
			this.SendPropertyChanging();
			entity.ProdutoTipoUnidade = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.País")]
	public partial class Paí : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPaís;
		
		private string _Brasil;
		
		private string _Argentina;
		
    #region Definições do Método de Extensibilidade
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPaísChanging(int value);
    partial void OnidPaísChanged();
    partial void OnBrasilChanging(string value);
    partial void OnBrasilChanged();
    partial void OnArgentinaChanging(string value);
    partial void OnArgentinaChanged();
    #endregion
		
		public Paí()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPaís", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idPaís
		{
			get
			{
				return this._idPaís;
			}
			set
			{
				if ((this._idPaís != value))
				{
					this.OnidPaísChanging(value);
					this.SendPropertyChanging();
					this._idPaís = value;
					this.SendPropertyChanged("idPaís");
					this.OnidPaísChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brasil", DbType="NChar(10)")]
		public string Brasil
		{
			get
			{
				return this._Brasil;
			}
			set
			{
				if ((this._Brasil != value))
				{
					this.OnBrasilChanging(value);
					this.SendPropertyChanging();
					this._Brasil = value;
					this.SendPropertyChanged("Brasil");
					this.OnBrasilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Argentina", DbType="NChar(10)")]
		public string Argentina
		{
			get
			{
				return this._Argentina;
			}
			set
			{
				if ((this._Argentina != value))
				{
					this.OnArgentinaChanging(value);
					this.SendPropertyChanging();
					this._Argentina = value;
					this.SendPropertyChanged("Argentina");
					this.OnArgentinaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Configuracoes")]
	public partial class Configuracoes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _regime;
		
    #region Definições do Método de Extensibilidade
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnregimeChanging(string value);
    partial void OnregimeChanged();
    #endregion
		
		public Configuracoes()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regime", DbType="VarChar(30)")]
		public string regime
		{
			get
			{
				return this._regime;
			}
			set
			{
				if ((this._regime != value))
				{
					this.OnregimeChanging(value);
					this.SendPropertyChanging();
					this._regime = value;
					this.SendPropertyChanged("regime");
					this.OnregimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Regime")]
	public partial class Regime : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _descricao;
		
		private EntitySet<SituacaoTributaria> _SituacaoTributaria;
		
    #region Definições do Método de Extensibilidade
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndescricaoChanging(string value);
    partial void OndescricaoChanged();
    #endregion
		
		public Regime()
		{
			this._SituacaoTributaria = new EntitySet<SituacaoTributaria>(new Action<SituacaoTributaria>(this.attach_SituacaoTributaria), new Action<SituacaoTributaria>(this.detach_SituacaoTributaria));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descricao", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string descricao
		{
			get
			{
				return this._descricao;
			}
			set
			{
				if ((this._descricao != value))
				{
					this.OndescricaoChanging(value);
					this.SendPropertyChanging();
					this._descricao = value;
					this.SendPropertyChanged("descricao");
					this.OndescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Regime_SituacaoTributaria", Storage="_SituacaoTributaria", ThisKey="id", OtherKey="id_regime")]
		public EntitySet<SituacaoTributaria> SituacaoTributaria
		{
			get
			{
				return this._SituacaoTributaria;
			}
			set
			{
				this._SituacaoTributaria.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SituacaoTributaria(SituacaoTributaria entity)
		{
			this.SendPropertyChanging();
			entity.Regime = this;
		}
		
		private void detach_SituacaoTributaria(SituacaoTributaria entity)
		{
			this.SendPropertyChanging();
			entity.Regime = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProdutoTipoUnidade")]
	public partial class ProdutoTipoUnidade1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Descricao;
		
		private EntitySet<Produto> _Produto;
		
    #region Definições do Método de Extensibilidade
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    #endregion
		
		public ProdutoTipoUnidade1()
		{
			this._Produto = new EntitySet<Produto>(new Action<Produto>(this.attach_Produto), new Action<Produto>(this.detach_Produto));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descricao", DbType="NChar(2) NOT NULL", CanBeNull=false)]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProdutoTipoUnidade1_Produto", Storage="_Produto", ThisKey="id", OtherKey="tipo_unidade")]
		public EntitySet<Produto> Produto
		{
			get
			{
				return this._Produto;
			}
			set
			{
				this._Produto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Produto(Produto entity)
		{
			this.SendPropertyChanging();
			entity.ProdutoTipoUnidade1 = this;
		}
		
		private void detach_Produto(Produto entity)
		{
			this.SendPropertyChanging();
			entity.ProdutoTipoUnidade1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Imposto")]
	public partial class Imposto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_ICMS;
		
		private int _id_categoria;
		
		private EntityRef<Categoria> _Categoria;
		
		private EntityRef<ICMS> _ICMS;
		
    #region Definições do Método de Extensibilidade
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_ICMSChanging(int value);
    partial void Onid_ICMSChanged();
    partial void Onid_categoriaChanging(int value);
    partial void Onid_categoriaChanged();
    #endregion
		
		public Imposto()
		{
			this._Categoria = default(EntityRef<Categoria>);
			this._ICMS = default(EntityRef<ICMS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ICMS", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_ICMS
		{
			get
			{
				return this._id_ICMS;
			}
			set
			{
				if ((this._id_ICMS != value))
				{
					if (this._ICMS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_ICMSChanging(value);
					this.SendPropertyChanging();
					this._id_ICMS = value;
					this.SendPropertyChanged("id_ICMS");
					this.Onid_ICMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_categoria", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_categoria
		{
			get
			{
				return this._id_categoria;
			}
			set
			{
				if ((this._id_categoria != value))
				{
					if (this._Categoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_categoriaChanging(value);
					this.SendPropertyChanging();
					this._id_categoria = value;
					this.SendPropertyChanged("id_categoria");
					this.Onid_categoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Imposto", Storage="_Categoria", ThisKey="id_categoria", OtherKey="id", IsForeignKey=true)]
		public Categoria Categoria
		{
			get
			{
				return this._Categoria.Entity;
			}
			set
			{
				Categoria previousValue = this._Categoria.Entity;
				if (((previousValue != value) 
							|| (this._Categoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categoria.Entity = null;
						previousValue.Imposto.Remove(this);
					}
					this._Categoria.Entity = value;
					if ((value != null))
					{
						value.Imposto.Add(this);
						this._id_categoria = value.id;
					}
					else
					{
						this._id_categoria = default(int);
					}
					this.SendPropertyChanged("Categoria");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ICMS_Imposto", Storage="_ICMS", ThisKey="id_ICMS", OtherKey="id", IsForeignKey=true)]
		public ICMS ICMS
		{
			get
			{
				return this._ICMS.Entity;
			}
			set
			{
				ICMS previousValue = this._ICMS.Entity;
				if (((previousValue != value) 
							|| (this._ICMS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ICMS.Entity = null;
						previousValue.Imposto.Remove(this);
					}
					this._ICMS.Entity = value;
					if ((value != null))
					{
						value.Imposto.Add(this);
						this._id_ICMS = value.id;
					}
					else
					{
						this._id_ICMS = default(int);
					}
					this.SendPropertyChanged("ICMS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ICMS")]
	public partial class ICMS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _id_situacao_tributaria;
		
		private int _id_origem;
		
		private EntitySet<Imposto> _Imposto;
		
		private EntityRef<SituacaoTributaria> _SituacaoTributaria;
		
    #region Definições do Método de Extensibilidade
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_situacao_tributariaChanging(int value);
    partial void Onid_situacao_tributariaChanged();
    partial void Onid_origemChanging(int value);
    partial void Onid_origemChanged();
    #endregion
		
		public ICMS()
		{
			this._Imposto = new EntitySet<Imposto>(new Action<Imposto>(this.attach_Imposto), new Action<Imposto>(this.detach_Imposto));
			this._SituacaoTributaria = default(EntityRef<SituacaoTributaria>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_situacao_tributaria", DbType="Int NOT NULL")]
		public int id_situacao_tributaria
		{
			get
			{
				return this._id_situacao_tributaria;
			}
			set
			{
				if ((this._id_situacao_tributaria != value))
				{
					if (this._SituacaoTributaria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_situacao_tributariaChanging(value);
					this.SendPropertyChanging();
					this._id_situacao_tributaria = value;
					this.SendPropertyChanged("id_situacao_tributaria");
					this.Onid_situacao_tributariaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_origem", DbType="Int NOT NULL")]
		public int id_origem
		{
			get
			{
				return this._id_origem;
			}
			set
			{
				if ((this._id_origem != value))
				{
					this.Onid_origemChanging(value);
					this.SendPropertyChanging();
					this._id_origem = value;
					this.SendPropertyChanged("id_origem");
					this.Onid_origemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ICMS_Imposto", Storage="_Imposto", ThisKey="id", OtherKey="id_ICMS")]
		public EntitySet<Imposto> Imposto
		{
			get
			{
				return this._Imposto;
			}
			set
			{
				this._Imposto.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SituacaoTributaria_ICMS", Storage="_SituacaoTributaria", ThisKey="id_situacao_tributaria", OtherKey="id", IsForeignKey=true)]
		public SituacaoTributaria SituacaoTributaria
		{
			get
			{
				return this._SituacaoTributaria.Entity;
			}
			set
			{
				SituacaoTributaria previousValue = this._SituacaoTributaria.Entity;
				if (((previousValue != value) 
							|| (this._SituacaoTributaria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SituacaoTributaria.Entity = null;
						previousValue.ICMS.Remove(this);
					}
					this._SituacaoTributaria.Entity = value;
					if ((value != null))
					{
						value.ICMS.Add(this);
						this._id_situacao_tributaria = value.id;
					}
					else
					{
						this._id_situacao_tributaria = default(int);
					}
					this.SendPropertyChanged("SituacaoTributaria");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Imposto(Imposto entity)
		{
			this.SendPropertyChanging();
			entity.ICMS = this;
		}
		
		private void detach_Imposto(Imposto entity)
		{
			this.SendPropertyChanging();
			entity.ICMS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SituacaoTributaria")]
	public partial class SituacaoTributaria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _codigo;
		
		private int _id_regime;
		
		private string _descricao;
		
		private EntitySet<ICMS> _ICMS;
		
		private EntityRef<Regime> _Regime;
		
    #region Definições do Método de Extensibilidade
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncodigoChanging(int value);
    partial void OncodigoChanged();
    partial void Onid_regimeChanging(int value);
    partial void Onid_regimeChanged();
    partial void OndescricaoChanging(string value);
    partial void OndescricaoChanged();
    #endregion
		
		public SituacaoTributaria()
		{
			this._ICMS = new EntitySet<ICMS>(new Action<ICMS>(this.attach_ICMS), new Action<ICMS>(this.detach_ICMS));
			this._Regime = default(EntityRef<Regime>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigo", DbType="Int NOT NULL")]
		public int codigo
		{
			get
			{
				return this._codigo;
			}
			set
			{
				if ((this._codigo != value))
				{
					this.OncodigoChanging(value);
					this.SendPropertyChanging();
					this._codigo = value;
					this.SendPropertyChanged("codigo");
					this.OncodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_regime", DbType="Int NOT NULL")]
		public int id_regime
		{
			get
			{
				return this._id_regime;
			}
			set
			{
				if ((this._id_regime != value))
				{
					if (this._Regime.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_regimeChanging(value);
					this.SendPropertyChanging();
					this._id_regime = value;
					this.SendPropertyChanged("id_regime");
					this.Onid_regimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descricao", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string descricao
		{
			get
			{
				return this._descricao;
			}
			set
			{
				if ((this._descricao != value))
				{
					this.OndescricaoChanging(value);
					this.SendPropertyChanging();
					this._descricao = value;
					this.SendPropertyChanged("descricao");
					this.OndescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SituacaoTributaria_ICMS", Storage="_ICMS", ThisKey="id", OtherKey="id_situacao_tributaria")]
		public EntitySet<ICMS> ICMS
		{
			get
			{
				return this._ICMS;
			}
			set
			{
				this._ICMS.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Regime_SituacaoTributaria", Storage="_Regime", ThisKey="id_regime", OtherKey="id", IsForeignKey=true)]
		public Regime Regime
		{
			get
			{
				return this._Regime.Entity;
			}
			set
			{
				Regime previousValue = this._Regime.Entity;
				if (((previousValue != value) 
							|| (this._Regime.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Regime.Entity = null;
						previousValue.SituacaoTributaria.Remove(this);
					}
					this._Regime.Entity = value;
					if ((value != null))
					{
						value.SituacaoTributaria.Add(this);
						this._id_regime = value.id;
					}
					else
					{
						this._id_regime = default(int);
					}
					this.SendPropertyChanged("Regime");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ICMS(ICMS entity)
		{
			this.SendPropertyChanging();
			entity.SituacaoTributaria = this;
		}
		
		private void detach_ICMS(ICMS entity)
		{
			this.SendPropertyChanging();
			entity.SituacaoTributaria = null;
		}
	}
}
#pragma warning restore 1591
